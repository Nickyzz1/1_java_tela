biblia:

- todo método que for agir a partir do enveto d eum botão precisa ter @FXML isso causa erros como : invoke tagert exeception, reflect.DirectMethodHandleAccessor.invoke,  Error resolving onAction='#createAccount', either the event handler is not in the Namespace

- nada pode estar duplicado nos fxml, nem text nem button pois isso causa parseint error execpition

- todos os campos no fxml que terão alguma interação, por exemplo textField para pegar nome, botão para dar submit, precisam estar no topo do script nomeados acadav um com @FXML antes;

- META-INF precis estar na com do resourcers

- Usando o EntityManager, você pode executar operações de persistência. Isso inclui:
Persistir novas entidades no banco de dados (entityManager.persist(entity)).
Buscar entidades (entityManager.find(EntityClass.class, primaryKey)).
Atualizar entidades gerenciadas.
Remover entidades (entityManager.remove(entity)).
Fazer consultas usando JPQL (Java Persistence Query Language) ou Criteria API.

métodos do fxcollections:

.observableList() --> retorna uma lista observavel

ObservableList<String> list = FXCollections.observableArrayList("Item 1", "Item 2"); --> retorna uma lista obervavel que começa com elementos

List<String> regularList = new ArrayList<>();
ObservableList<String> observableList = FXCollections.observableList(regularList); --> cria uam lista observavel a partir de uma lista que já existe

como criar, adicionar e remover uma lista obervavel com fccollection:

ObservableList<String> fruits = FXCollections.observableArrayList("Apple", "Banana", "Cherry");

// Adicionando um novo elemento
fruits.add("Date");

// Removendo um elemento
fruits.remove("Banana");

// Imprimindo a lista
fruits.forEach(System.out::println);



